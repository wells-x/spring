<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wells.node.dao.UserDao">
    <resultMap id="userMap" type="com.wells.common.User">
        <id property="id" column="id"/>
        <result column="name" property="name"/>
        <result column="age" property="age"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
    </resultMap>

    <parameterMap id="User" type="com.wells.common.User"/>

    <!-- 查询所有用户信息 -->
    <select id="findAll" resultMap="userMap">
        select id, name, age, account, password, email
        from node.users
    </select>

    <!-- 根据用户ID查询用户信息 -->
    <select id="findById" resultMap="userMap" parameterType="java.lang.Integer">
        select *
        from node.users
        where id = #{id}
    </select>

    <!-- 根据用户account查询用户信息 -->
    <select id="findByAccount" resultMap="userMap" parameterType="java.lang.String">
        select *
        from node.users
        where account = #{account}
    </select>

    <!-- 新增用户 -->
    <insert id="insertUser" parameterMap="User" useGeneratedKeys="true" keyProperty="id">
        insert into node.users (name, age, account, password, email)
        values (#{name}, #{age}, #{account}, #{password}, #{email})
    </insert>

    <!-- 根据用户ID修改用户信息 -->
    <update id="updateUser" parameterType="User">
        update node.users
        set name     = #{name},
            age      = #{age},
            account  = #{account},
            password = #{password}
        where id = #{id}
    </update>

    <!-- 根据用户ID删除用户信息 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete
        from node.users
        where id = #{id}
    </delete>

</mapper>